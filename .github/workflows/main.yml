name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

       # Step 3: Create .env file
      - name: Create .env file
        run: |
          echo "REACT_APP_GOOGLE_CLIENT_ID=${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }}" >> .env
          echo "CONNECTION_URL=${{ secrets.CONNECTION_URL }}" >> .env

        # Step 4: Build and push images using docker-compose
      - name: Build and push images
        run: |
          docker compose build --push

  provision-infrastructure:
    runs-on: ubuntu-latest

    outputs:
      frontend_ip: ${{ steps.apply_terraform.outputs.frontend_ip }}
      backend_ip: ${{ steps.apply_terraform.outputs.backend_ip }}

    steps:
      # Step 1: Checkout code for Terraform files
      - name: Checkout code for Terraform files
        uses: actions/checkout@v3

      # Step 2: Set up Terraform CLI
      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: echo "AWS credentials configured"

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Step 5: Apply Terraform configuration and capture outputs
      - name: Apply Terraform configuration
        id: apply_terraform
        run: |
          terraform apply -auto-approve
          echo "::set-output name=frontend_ip::$(terraform output -raw frontend_ip)"
          echo "::set-output name=backend_ip::$(terraform output -raw backend_ip)"

  configure-and-deploy-app:
    runs-on: ubuntu-latest

    needs:
      - provision-infrastructure

    steps:
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install ansible -y

      # Step 1. Configure SSH Private Key for EC2 Access.
      - name :Configure SSH Key
